[
	{
		"name": "Recipe Server",
		"extension": ".jpg",
		"landscape": true,
		"tools": "Nginx,Next.js,Typescript,Prisma,Fusion 360,Python,Raspberry Pi",
		"blerb": "          I wanted to learn how to be a better cook and start cooking more complicated recipes for myself and wanted a device to help me with this. I chose to make a web server on a Raspberry Pi with a small screen and some external buttons. I \n\r3D printed\r a case to hold the screen, pi and buttons. The buttons were made large so that they could be pressed with my elbows if my hands had food on them while cooking. The web server was made with Nginx, Next.js, and Prisma. For this application these tools are overkill, but I wanted to use this as an opportunity to learn modern web development tools. The device can be connected to remotely through the web server where I can add and edit recipes that are stored on a local \n\rdatabase\r. It also has features like a shopping list generator and portion scaling."
	},
	{
		"name": "2-layer PCB Prototyping Machine",
		"extension": ".mp4",
		"landscape": true,
		"tools": "OpenCV,C++,Python,Klipper,React",
		"blerb": "          For my fourth year design project was a 2-layer printed circuit board (PCB) prototyping machine. We won the \n\rJames Dyson Innovation Award\r for this project. It works by placing a blank piece of FR-4 (copper clad fiberglass) into the machine. Then the traces, pads, through holes, and via holes are milled out using standard \n\rCNC milling\r and drilling processes. Once this is done on one side the whole board is flipped so traces can be milled on the back side as well. \n\rThe innovation comes from how we create and fill the vias\r. We built a wire extruder mechanism to extrude copper wire. An OpenCV program runs and detects the empty via holes as well as the wire coming out of the extruder. It then sends adjustment commands to the X/Y motors to position the wire into the via hole. Conductive sensing is used to detect if the wire is fully in the hole. Once the wire is in the hole, it is cut off and the extruder moves out of the way. Finally lead screws move a press down on both sides of the board to squish the wire, filling the via and creating contact with the top surface of the board. \n\rMy job for this project was designing and building the computer vision components, various firmware components, and the project website\r, \n\thttps://lobsterpcb.github.io/\tclick here\t."
	},
	{
		"name": "Project Management Software",
		"extension": ".png",
		"landscape": true,
		"tools": "Qt,C++,Bash",
		"blerb": "          I felt disorganized when making personal projects, especially ones that involved software, electrical, and mechanical design. So, I made this program to help me organize everything from the overall goal of a project to the low-level design. It has a to-do list, BOM table, and brainstorming section all in one place so I have a consistent workflow for my projects. I also used \n\rwindow objects\r to grab and embed Draw.io and a PDF viewer, in both Windows and Linux. The PDF viewer is to quickly open the datasheets of parts in the BOM. Draw.io is used to make block diagrams and flowcharts. Block diagrams are helpful to understand larger projects and visualize the interactions between software, electrical, and mechanical subsystems. I integrated a few bash scripts to help with repetitive tasks like creating README files and saving projects to GitHub for example. I also took this as an opportunity to learn Qt as up until this point I mostly used WinForms for desktop programs."
	},
	{
		"name": "Wood Working",
		"extension": ".jpg",
		"landscape": true,
		"tools": "Whittling knife,Sandpaper,Drill press,Bandsaw,Table saw,Woodburning,Brazing",
		"blerb": "          I've always wanted to learn how to wood work, so I started with carving small birds with a knife. Then my first big carving was of a whale. I entered this whale in the New Brunswick Wood Carving Association's 2024 competition and \n\rwon 1st place\r in the novice division. To learn more, I chose to make a shorebird that was painted and used woodburning to etch in the quills and fibers on the feathers."
	},
	{
		"name": "Temperature Sensor",
		"extension": ".mp4",
		"landscape": false,
		"tools": "LoRa,PLC,Networking,UDP,Arduino,Enclosure design,Electrical design,soldering",
		"blerb": "          During my work term at St Marys Cement I was tasked with creating a wireless temperature sensor. The requirements for this sensor were as follows: it must send a UDP message with the data once every minute, it must last for at least 3 years without replacing the battery, and it must withstand harsh outdoor conditions such as cement dust, snow and rain. After some research I learned about LoRa which can send small packets of data over large distances with a lot less power than Wi-Fi. From here I found a microcontroller that had a LoRa radio module. After presenting my preliminary design, my boss said that I should \n\rdesign it to last as long as possible\r in order to reduce maintenance costs. So, I added a \n\rsolar panel and charging circuit\r. After soldering all the components and fitting it into the housing, the prototype was complete. It had a screen with buttons to let a user configure and debug the device. It read the temperature from a sensor in the \n\rthermowell\r. It sends this data through the radio module and antenna to a \n\rLoRa gateway\r which forwarded the data as a UDP packet via Ethernet to the company’s local network. From here the PLC’s received the packet and processed the data."
	},
	{
		"name": "Chess Robot",
		"extension": ".mp4",
		"landscape": false,
		"tools": "OpenCV,RobotC,Java,Android Studio,Bluetooth",
		"blerb": "          I along with two of my classmates built a robot that plays chess with you. The robot can accurately navigate the board, pick up the pieces and preform complex moves such as castling. It is also able to detect where the pieces are on the board and make a move \n\rautonomously\r. We used a Lego NXT kit and \n\rlaser cut\r gear tracks to build the robot. \n\rRobotC\r was used to program the movements in the NXT brick and to connect the brick via Bluetooth to an app. We made the app using Android Studio. The app had three parts: Bluetooth, computer vision, and the neural network. I made the \n\rcomputer vision\r using OpenCV. My part of the app would take a picture and detect what colors where on each square of the board. Colors were painted on the top of each piece so I could convert this information into an output string which contained the type of piece and its location on the board. This output was fed into a \n\rcustom neural network\r that my classmate made, where the next best move would be calculated. The neural network would output this move as a command that was sent over Bluetooth, parsed by the RobotC program and executed on the robot."
	},
	{
		"name": "Hackathons",
		"extension": ".png",
		"landscape": false,
		"tools": "Lua,Corona SDK,Android,C#,WinForms,Solidity",
		"blerb": "          I have participated in 3 hackathons. The picture is from my first hackathon \n\rECOding Hacks\r. The project is an \n\randroid app\r that gives players points when they recycle in real life which in turn cleans up a virtual environment. I had to learn Lua and Corona SDK during this hackathon which was a fun challenge while under a time constraint. This project \n\rgot 2nd place\r in it's category. I \n\rwon 1st place\r in \n\rEngHack\r by making a money management program with C# and WinForms. I also learned Solidity and blockchain development at \n\rETHHack\r."
	},
	{
		"name": "Pong",
		"extension": ".jpg",
		"landscape": true,
		"tools": "JavaScript",
		"blerb": "          I made this game to learn JavaScript. So I started by making a basic game of Pong and then adding extra features. I added \n\rsingle player\r and \n\rmultiplayer\r modes that you can switch between by pressing the '1' and '2' keys. I also added the ability to pause the game when you press 'p'. As well as some small features such as changing background colors and sounds that will play when you hit the ball. The 'w', 's' and arrow keys move the paddles. If you would like to play, \n\thttps://calebbrett.github.io/Pong/PongRetroWColor.html\tclick here\t."
	},
	{
		"name": "Camera Mount",
		"extension": ".mp4",
		"landscape": false,
		"tools": "C#,OpenCV,Arduino",
		"blerb": "          To learn OpenCV, I built a motorized pan and tilt camera mount that is controlled by an Arduino and C#. The GUI has buttons that control the camera, a display to show the input from the camera, and a green square used to manually control where the camera is pointed. The green square works by converting the position of your mouse when it is over the square into coordinates. These coordinates are sent to the Arduino which then moves the servo motors to the desired position. OpenCV processes the camera input from the webcam. It then finds the pixels of a chosen colour, then \n\rtracks and follows\r an object of that colour."
	},
	{
		"name": "Tip n Tilt",
		"extension": ".png",
		"landscape": false,
		"tools": "Unity,C#",
		"blerb": "          This is the first \n\rmobile application\r I built. The controls for the game are tilting and taping. Tilting your phone one way or the other causes the smiley face to roll in that direction. Tapping on the side of the screen will cause the character to jump in that direction. The goal of the game is to gain as many points as possible by rolling down the \n\rprocedurally generated map\r while avoiding the spikes. I built this using the \n\rUnity game engine\r and C#. I wanted to try incorporating many things I did not have experience with. So, when designing the app, I wanted to try to use different input methods like tilting. I also wanted to make a procedurally generated map so that the game could be played for a long time and the level would keep changing."
	},
	{
		"name": "Raft",
		"extension": ".jpg",
		"landscape": false,
		"tools": "Hand tools",
		"blerb": "          I designed and built a raft to leave out on the river so that my family could swim to it and jump off in the summer. I used wooden boards to make the frame, plastic barrels to make it float, and metal straps to keep the barrels secured to the frame. It is about 12x12 feet and uses 6 barrels to stay afloat. I designed the raft so that \n\rthe boards on top of the frame are removable\r. This made the raft much lighter and easier to transport."
	}
]
